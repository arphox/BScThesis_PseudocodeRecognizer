<program>:  # method-body
  program_kezd újsor <állítások> program_vége

<állítások>:  # statement-list
  <egysorosÁllítás> <állítások>
  <egysorosÁllítás>

<egysorosÁllítás>:  # statement&empty-statement
  <állítás> újsor
  újsor

<állítás>:  # statement
  <lokálisVáltozóDeklaráció>
  <beágyazottÁllítás>

<lokálisVáltozóDeklaráció>: #local-variable-declaration
  <típus> azonosító = <kifejezés>
  <típus> azonosító

<típus>:
  <tömbTípus>
  <alapTípus>

<alapTípus>:
  egész
  tört
  szöveg
  logikai

<tömbTípus>:
  <alapTípus> [ ]

<belsőFüggvény>:
  egészből_logikaiba
  törtből_egészbe
  törtből_logikaiba
  logikaiból_egészbe
  logikaiból_törtbe
  szövegből_egészbe
  szövegből_törtbe
  szövegből_logikaiba

<beágyazottÁllítás>:
  <értékadás>
  ha <logikaiKifejezés> akkor <beágyazottÁllítás> különben <beágyazottÁllítás> elágazás_vége
  ha <logikaiKifejezés> akkor <beágyazottÁllítás> elágazás_vége
  ciklus_amíg <logikaiKifejezés> <beágyazottÁllítás>
  ciklus <számlálóCiklusInicializáló> -tól <logikaiKifejezés> -ig <beágyazottÁllítás>
  <parancsÁllítás>

<parancsÁllítás>:
  <parancs> azonosító

<parancs>:
  beolvas
  kiír

<értékadás>:
  <unárisKifejezés> = <kifejezés>

<számlálóCiklusInicializáló>:
  <lokálisVáltozóDeklaráció>
  <értékadás>

<elsődlegesKifejezés>:
  <elsődlegesNemTömbLétrehozóKifejezés>
  <tömbLétrehozóKifejezés>

<elsődlegesNemTömbLétrehozóKifejezés>:
  <literál>
  azonosító
  <zárójelesKifejezés>
  <tömbElemElérés>

<zárójelesKifejezés>:
  ( <kifejezés> )

<tömbElemElérés>:
  azonosító [ azonosító ]
  azonosító [ <kifejezés> ]

<tömbLétrehozóKifejezés>:
  létrehoz ( <alapTípus> ) [ <elsődlegesNemTömbLétrehozóKifejezés> ]

<logikaiKifejezés>:
  <kifejezés>

<kifejezés>: #non-assignment-expression / conditional-expression
  <feltételesVagyKifejezés>

<feltételesVagyKifejezés>:
  <feltételesÉsKifejezés>
  <feltételesVagyKifejezés> vagy <feltételesÉsKifejezés>

<feltételesÉsKifejezés>:
  <egyenlőségKifejezés>
  <feltételesÉsKifejezés> és <egyenlőségKifejezés>

<egyenlőségKifejezés>:
  <relációsKifejezés>
  <egyenlőségKifejezés> == <relációsKifejezés>
  <egyenlőségKifejezés> != <relációsKifejezés>

<relációsKifejezés>:
  <additívKifejezés>
  <relációsKifejezés> < <additívKifejezés>
  <relációsKifejezés> > <additívKifejezés>
  <relációsKifejezés> <= <additívKifejezés>
  <relációsKifejezés> >= <additívKifejezés>

<additívKifejezés>:
  <multiplikatívKifejezés>
  <additívKifejezés> + <multiplikatívKifejezés>
  <additívKifejezés> - <multiplikatívKifejezés>
  <additívKifejezés> . <multiplikatívKifejezés>
  # ^ nem vagyok biztos hogy ezt ide kéne

<multiplikatívKifejezés>:
  <unárisKifejezés>
  <multiplikatívKifejezés> * <unárisKifejezés>
  <multiplikatívKifejezés> / <unárisKifejezés>
  <multiplikatívKifejezés> mod <unárisKifejezés>

<unárisKifejezés>:
  <elsődlegesKifejezés>
  + <unárisKifejezés>
  - <unárisKifejezés>
  ! <unárisKifejezés>
  <belsőFüggvényHívóKifejezés>

<belsőFüggvényHívóKifejezés>:
  <belsőFüggvény> ( <elsődlegesNemTömbLétrehozóKifejezés> )