# Lexikai dolgok:
<literál>:
  egészliterál
  törtliterál
  szövegliterál
  igaz
  hamis

<belsõFüggvény>:
  egészbõl_logikaiba
  törtbõl_egészbe
  törtbõl_logikaiba
  logikaiból_egészbe
  logikaiból_törtbe
  szövegbõl_egészbe
  szövegbõl_törtbe
  szövegbõl_logikaiba
  
  

  
  
# Típusok:
<típus>:
  <alapTípus>
  <tömbTípus>

<alapTípus>:
  egész
  tört
  szöveg
  logikai
  
<tömbTípus>:
  <alapTípus> [ ]

  
  
  
  
# Mondatszimbólum:
<program>:
  program_kezd újsor <állítások> program_vége

  
  
  
  
# Kifejezések:
<elsõdlegesKifejezés>:
  <elsõdlegesNemTömbLétrehozóKifejezés>
  <tömbCsinálóKifejezés>
   
<elsõdlegesNemTömbLétrehozóKifejezés>:
  <literál>
  azonosító
  <zárójelesKifejezés>
  <tömbElemElérés>

<zárójelesKifejezés>:
  ( <kifejezés> )
   
<tömbElemElérés>:
  azonosító [ azonosító ]
  azonosító [ <kifejezés> ]
  
<tömbCsinálóKifejezés>:
  létrehoz ( <alapTípus> ) [ <elsõdlegesNemTömbLétrehozóKifejezés> ]
  
<logikaiKifejezés>:
  <kifejezés>
  
<kifejezés>: # csak nem-értékadó kifejezés lehet
  <feltételesVagyKifejezés>
    
<feltételesVagyKifejezés>:
  <feltételesÉsKifejezés>
  <feltételesVagyKifejezés> vagy <feltételesÉsKifejezés>
  
<feltételesÉsKifejezés>:
  <egyenlõségKifejezés>
  <feltételesÉsKifejezés> és <inkluzívVagyKifejezés>

<egyenlõségKifejezés>:
  <relációsKifejezés>
  <egyenlõségKifejezés> == <relációsKifejezés>
  <egyenlõségKifejezés> != <relációsKifejezés>
   
<relációsKifejezés>:
  <additívKifejezés>
  <relációsKifejezés> < <additívKifejezés>
  <relációsKifejezés> > <additívKifejezés>
  <relációsKifejezés> <= <additívKifejezés>
  <relációsKifejezés> >= <additívKifejezés>

<additívKifejezés>:
  <multiplikatívKifejezés>
  <additívKifejezés> + <multiplikatívKifejezés>
  <additívKifejezés> - <multiplikatívKifejezés>
  <additívKifejezés> . <multiplikatívKifejezés>
  # ^ nem vagyok biztos hogy ezt ide kéne
  
<multiplikatívKifejezés>:
  <unárisKifejezés>
  <multiplikatívKifejezés> * <unárisKifejezés>
  <multiplikatívKifejezés> / <unárisKifejezés>
  <multiplikatívKifejezés> mod <unárisKifejezés>
  
<unárisKifejezés>:
  <elsõdlegesKifejezés>
  + <unárisKifejezés>
  - <unárisKifejezés>
  ! <unárisKifejezés>
  <belsõFüggvényHívóKifejezés>
  
<belsõFüggvényHívóKifejezés>:
  <belsõFüggvény> ( <elsõdlegesNemTömbLétrehozóKifejezés> )


  


# Állítások:
<állítások>:
  <egysorosÁllítás> <állítások>
  <egysorosÁllítás>
  
<egysorosÁllítás>:
  <állítás> újsor
  újsor
  #^ üres állítás
  
<állítás>:
  <lokálisVáltozóDeklaráció>
  <beágyazottÁllítás>
 
<lokálisVáltozóDeklaráció>:
  <típus> azonosító
  <típus> azonosító = <kifejezés>
  
<beágyazottÁllítás>:
  <értékadás>
  ha <logikaiKifejezés> akkor <beágyazottÁllítás> elágazás_vége
  ha <logikaiKifejezés> akkor <beágyazottÁllítás> különben <beágyazottÁllítás> elágazás_vége
  ciklus_amíg <logikaiKifejezés> <beágyazottÁllítás>
  ciklus <számlálóCiklusInicializáló> -tól <logikaiKifejezés> -ig <beágyazottÁllítás>
  
<értékadás>:
  <unárisKifejezés> = <kifejezés>

<számlálóCiklusInicializáló>:
  <lokálisVáltozóDeklaráció>
  <értékadás>
   

  

   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  